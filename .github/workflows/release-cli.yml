name: Release Stronghold CLI

on:
  workflow_dispatch:
  push:
    branches:
      - ci/cli-release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        working-directory: engine/examples/commandline

    steps:
    - uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install gon (macOS)
      # https://github.com/mitchellh/gon
      run: brew install mitchellh/gon/gon
      if: matrix.os == 'macos-latest'

    # - name: Get current date
    #   if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
    #   run: echo "::set-env name=CURRENT_DATE::$(date +'%Y-%m-%d')"

    # - name: Get current date
    #   if: matrix.os == 'windows-latest'
    #   run: echo "::set-env name=CURRENT_DATE::$(Get-Date -Format "yyyy-MM-dd")"

    # - name: Cache cargo registry
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.cargo/registry
    #     # Add date to the cache to keep it up to date
    #     key: ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
    #     # Restore from outdated cache for speed
    #     restore-keys: |
    #       ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

    # - name: Cache cargo index
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.cargo/git
    #     # Add date to the cache to keep it up to date
    #     key: ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
    #     # Restore from outdated cache for speed
    #     restore-keys: |
    #       ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}

    # - name: Cache cargo target
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ matrix.project}}/target
    #     # Add date to the cache to keep it up to date
    #     key: ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
    #     # Restore from outdated cache for speed
    #     restore-keys: |
    #       ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.rust }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Build Stronghold CLI
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path=engine/examples/commandline/Cargo.toml --release
    
    - name: Import code signing assets (macOS)
      # Based on https://github.com/Apple-Actions/import-codesign-certs/blob/master/src/security.ts
      run: |
        security create-keychain -p $KEYCHAIN_PASSWORD signing.keychain
        security set-keychain-settings -lut 3600 signing.keychain
        security unlock-keychain -p $KEYCHAIN_PASSWORD signing.keychain
        echo $DISTRIBUTION_CERT_BASE64 | base64 -D -o signing.p12
        security import signing.p12 -k signing.keychain -f pkcs12 -T "/usr/bin/codesign" -T "/usr/bin/security" -P $DISTRIBUTION_CERT_PASSWORD
        rm signing.p12
        security -q set-key-partition-list -S apple-tool:,apple: -k $KEYCHAIN_PASSWORD signing.keychain
        security find-identity -v
      env:
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        DISTRIBUTION_CERT_BASE64: ${{ secrets.APPLE_DISTRIBUTION_CERT_BASE64 }}
        DISTRIBUTION_CERT_PASSWORD: ${{ secrets.APPLE_DISTRIBUTION_CERT_PASSWORD }}
      if: matrix.os == 'macos-latest'
    
    - name: Delete keychain (macOS)
      run: security delete-keychain signing.keychain
      # Note: an issue with GitHub Actions will cause this to run on Windows and Linux agents if the job fails or is cancelled
      # This is due to the way the if statement below is evaluated
      if: matrix.os == 'macos-latest' || ${{ cancelled() }} || ${{ failure() }}

    - name: Upload artifacts (Windows/Linux)
      uses: actions/upload-artifact@v2
      with:
        name: stronghold-cli-${{ matrix.os }}
        path: |
          engine/examples/commandline/target/release/stronghold
          engine/examples/commandline/target/release/stronghold.exe
      if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'
